
R version 3.5.3 (2019-03-11) -- "Great Truth"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(testthat)
> library(exampletestr)
> 
> test_check("exampletestr")
[31m──[39m [31m1. Error: `extract_examples()` works (@test-exemplar.R#12) [39m [31m─────────────────────────────────────────────[39m
could not find function "intmat_list_bind_nth_rows"
1: suppressMessages(extract_examples("detect", pkg_dir = tempdir())) at testthat/test-exemplar.R:12
2: withCallingHandlers(expr, message = function(c) invokeRestart("muffleMessage"))
3: extract_examples("detect", pkg_dir = tempdir())
4: rd_file_paths %>% filesstrings::before_last_dot() %>% filesstrings::str_after_last("/")
5: withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))
6: eval(quote(`_fseq`(`_lhs`)), env, env)
7: eval(quote(`_fseq`(`_lhs`)), env, env)
8: `_fseq`(`_lhs`)
9: freduce(value, `_function_list`)
10: withVisible(function_list[[k]](value))
11: function_list[[k]](value)
12: filesstrings::str_after_last(., "/")
13: str_after_nth(strings = strings, pattern = pattern, n = -1)
14: str_nth_instance_indices(strings, pattern, n)
15: intmat_list_bind_nth_rows(instances, n - 1) %>% magrittr::set_colnames(c("start", "end"))
16: eval(lhs, parent, parent)
17: eval(lhs, parent, parent)

[31m──[39m [31m2. Failure: `make_test_shell()` works (@test-exemplar.R#50) [39m [31m────────────────────────────────────────────[39m
file.copy(...) isn't true.

[31m──[39m [31m3. Error: `make_test_shell()` works (@test-exemplar.R#53) [39m [31m──────────────────────────────────────────────[39m
could not find function "intmat_list_bind_nth_rows"
1: expect_equal(suppressMessages(make_test_shell(extract_examples("R/detect.R", pkg_dir = tempdir())[[1]])), c("test_that(\"\", {", 
       "  fruit <- c(\"apple\", \"banana\", \"pear\", \"pinapple\")", "  expect_equal(str_detect(fruit, \"a\"), )", 
       "  expect_equal(str_detect(fruit, \"^a\"), )", "  expect_equal(str_detect(fruit, \"a$\"), )", "  expect_equal(str_detect(fruit, \"b\"), )", 
       "  expect_equal(str_detect(fruit, \"[aeiou]\"), )", "  expect_equal(str_detect(\"aecfg\", letters), )", "})")) at testthat/test-exemplar.R:53
2: quasi_label(enquo(object), label, arg = "object")
3: eval_bare(get_expr(quo), get_env(quo))
4: suppressMessages(make_test_shell(extract_examples("R/detect.R", pkg_dir = tempdir())[[1]]))
5: withCallingHandlers(expr, message = function(c) invokeRestart("muffleMessage"))
6: make_test_shell(extract_examples("R/detect.R", pkg_dir = tempdir())[[1]])
7: checkmate::assert_character(example_block)
8: checkCharacter(x, min.chars, pattern, fixed, ignore.case, any.missing, all.missing, len, min.len, max.len, unique, 
       sorted, names, null.ok)
9: .Call(c_check_character, x, min.chars, any.missing, all.missing, len, min.len, max.len, unique, sorted, names, 
       null.ok) %and% checkCharacterPattern(x, pattern, fixed, ignore.case)
10: isTRUE(lhs)
11: extract_examples("R/detect.R", pkg_dir = tempdir())
12: filesstrings::str_after_last(r_file_name, "/")
13: str_after_nth(strings = strings, pattern = pattern, n = -1)
14: str_nth_instance_indices(strings, pattern, n)
15: intmat_list_bind_nth_rows(instances, n - 1) %>% magrittr::set_colnames(c("start", "end"))
16: eval(lhs, parent, parent)
17: eval(lhs, parent, parent)

[31m──[39m [31m4. Failure: `make_tests_shell_fun()` works (@test-exemplar.R#93) [39m [31m───────────────────────────────────────[39m
`make_test_shell_fun("str_detect", open = FALSE, pkg_dir = tempdir(check = TRUE))` threw an error with unexpected message.
Expected match: "no DESCRIPTION file"
Actual message: "could not find function \"intmat_list_bind_nth_rows\""

[31m──[39m [31m5. Failure: `make_tests_shell_fun()` works (@test-exemplar.R#100) [39m [31m──────────────────────────────────────[39m
all(...) isn't true.

── 6. Error: `make_tests_shell_fun()` works (@test-exemplar.R#103)  ────────────────────────────────────────
could not find function "intmat_list_bind_nth_rows"
1: utils::capture.output(make_test_shell_fun("str_detect()", open = FALSE, pkg_dir = tempdir())) %>% invisible() at testthat/test-exemplar.R:103
2: eval(lhs, parent, parent)
3: eval(lhs, parent, parent)
4: utils::capture.output(make_test_shell_fun("str_detect()", open = FALSE, pkg_dir = tempdir()))
5: evalVis(expr)
6: withVisible(eval(expr, pf))
7: eval(expr, pf)
8: eval(expr, pf)
9: make_test_shell_fun("str_detect()", open = FALSE, pkg_dir = tempdir())
10: list.files(rprojroot::find_package_root_file("R")) %>% purrr::map(extract_examples, document = FALSE) %>% purrr::reduce(c)
...
23: `_fseq`(`_lhs`)
24: freduce(value, `_function_list`)
25: withVisible(function_list[[k]](value))
26: function_list[[k]](value)
27: filesstrings::str_after_last(., "/")
28: str_after_nth(strings = strings, pattern = pattern, n = -1)
29: str_nth_instance_indices(strings, pattern, n)
30: intmat_list_bind_nth_rows(instances, n - 1) %>% magrittr::set_colnames(c("start", "end"))
31: eval(lhs, parent, parent)
32: eval(lhs, parent, parent)

── 7. Error: `make_tests_shells_file()` works (@test-exemplar.R#208)  ──────────────────────────────────────
User input required, but session is not interactive.
Query: Do you want to create anyway?
1: utils::capture.output(usethis::create_package("tempkg", open = FALSE)) %>% invisible() at testthat/test-exemplar.R:208
2: eval(lhs, parent, parent)
3: eval(lhs, parent, parent)
4: utils::capture.output(usethis::create_package("tempkg", open = FALSE))
5: evalVis(expr)
6: withVisible(eval(expr, pf))
7: eval(expr, pf)
8: eval(expr, pf)
9: usethis::create_package("tempkg", open = FALSE)
10: check_not_nested(path_dir(path), name)
11: ui_nope("Do you want to create anyway?")
12: ui_yeah(x, .envir = .envir)
13: ui_stop(c("User input required, but session is not interactive.", "Query: {x}"))

══ testthat results  ═══════════════════════════════════════════════════════════════════════════════════════
OK: 6 SKIPPED: 0 WARNINGS: 1 FAILED: 7
1. Error: `extract_examples()` works (@test-exemplar.R#12) 
2. Failure: `make_test_shell()` works (@test-exemplar.R#50) 
3. Error: `make_test_shell()` works (@test-exemplar.R#53) 
4. Failure: `make_tests_shell_fun()` works (@test-exemplar.R#93) 
5. Failure: `make_tests_shell_fun()` works (@test-exemplar.R#100) 
6. Error: `make_tests_shell_fun()` works (@test-exemplar.R#103) 
7. Error: `make_tests_shells_file()` works (@test-exemplar.R#208) 

Error: testthat unit tests failed
Execution halted
